yminus = results_baseline$low_R[f,i+1],
xlab = 'Prop. reduction in movement',
ylab = 'Rt',yaxt="n",
xlim = c(0,1),bty = 'n',
ylim = c((0.5),(8)),
col = rgb(1,0,0))
axis(side =2, at = (c(0,1,3,6)), labels = c(0,1,3,6))
f <- which(D[,i+1] > 0)
# errbar(x = 1-M_D[f,i]+1e-2,
#        y = results_full_Rt_D2$median_R[f,i+1],
#        yplus = results_full_Rt_D2$up_R[f,i+1],
#        yminus = results_full_Rt_D2$low_R[f,i+1],
#        col = rgb(0,0,1),
#        add=TRUE)
errbar(x = 1-M[f,i],
y = results_full_Rt_daily$median_R[f,i+1],
yplus = results_full_Rt_daily$up_R[f,i+1],
yminus = results_full_Rt_daily$low_R[f,i+1],
col = rgb(0,0,1),
add=TRUE)
abline(h=(1),lwd=2,col='red',lty=2)
lines(results_full_Rt_assumed_mob$median_R$mobility,(results_full_Rt_assumed_mob$median_R[ ,i+1]),
type='l',#ylim = c(0,10),
# xlim=c(0,N_days),
col='blue',lwd=2)
polygon(c(results_full_Rt_assumed_mob$median_R$mobility,
rev(results_full_Rt_assumed_mob$median_R$mobility)),
(c(results_full_Rt_assumed_mob$low_R[,i+1],
rev(results_full_Rt_assumed_mob$up_R[,i+1]))),
col=rgb(0,0,1,.2),border=NA)
M_D[f,i]
results_full_Rt_D2$M_D[f,i]
x=results_full_Rt_D2$median_R
View(x)
x=results_full_Rt_D2$M_D
View(x)
View(M_D)
M_D[f,i]
results_full_Rt_D2$M_D[f,i+1]
View(Rt_fun)
x <- matrix(c(seq(1,0,length.out = 150),seq(0,1,length.out = 150)),15,2,byrow = FALSE)
View(x)
function (data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL)
x <- matrix(c(seq(1,0,length.out = 150),seq(0,1,length.out = 150)),15,2,byrow = FALSE)
x <- matrix(c(seq(1,0,length.out = 150),seq(0,1,length.out = 150)),15,2,byrow = FALSE)
View(x)
x <- matrix(c(seq(1,0,length.out = 150),seq(0,1,length.out = 150)),150,2,byrow = FALSE)
median(res$theta)
apply(res$theta,1,median)
apply(res$theta,2,median)
Rt_fun(theta = c(5,2),x = x)
Rt_fun(theta = c(5,5,2,2),x = x)
N_geo=2
Rt_fun(theta = c(5,5,2,2),x = x)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
H%*%r_d
r_d <- Rt_fun(theta = c(5,5,2,2),x = x)
H%*%r_d
N_days=150
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
r_d <- Rt_fun(theta = c(5,5,2,2),x = x)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
H %*% r_d
xD <- H %*% x
# check
N_days=150
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
r_day <- Rt_fun(theta = c(5,5,2,2),x = x)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
xD <- H %*% x
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1])
plot(x[,2],r_day[,2])
lines(xD[,2],RD[,2])
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1])
plot(x[,2],r_day[,2])
lines(xD[,2],RD[,2])
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1])
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1],pch=16,col='blue')
lines(xD[,1],RD[,1],typ='p',pch=16,col='blue')
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1],typ='p',pch=16,col='blue')
lines(xD[,1],RD[,1],type='p',pch=16,col='blue')
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1],type='p',pch=16,col='blue')
plot(x[,2],r_day[,2])
lines(xD[,2],RD[,2],type='p',pch=16,col='blue')
y <- pnorm(q = x,mean = .5,sd = .1)
plot(x[,1],y[,2])
plot(x[,1],y[,1])
plot(x[,2],y[,2])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
xD <- H %*% y
plot(x[,1],r_day[,1])
lines(xD[,1],RD[,1],type='p',pch=16,col='blue')
yD <- H %*% y
plot(y[,1],r_day[,1])
lines(yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(y[,2],r_day[,2])
lines(yD[,2],RD[,2],type='p',pch=16,col='blue')
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
r_day
RD <- H %*% r_day
yD <- H %*% y
plot(y[,1],r_day[,1])
plot(1-y[,1],r_day[,1])
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(y[,1],r_day[,1])
lines(yD[,1],RD[,1],type='p',pch=16,col='blue')
# check
N_days=150
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .1)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(y[,1],r_day[,1])
lines(yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(y[,2],r_day[,2])
lines(yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=150
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .1)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(y[,1],r_day[,1])
lines(yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(y[,2],r_day[,2])
lines(yD[,2],RD[,2],type='p',pch=16,col='blue')
y <- pnorm(q = x,mean = .5,sd = .01)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(y[,1],r_day[,1])
lines(yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(y[,2],r_day[,2])
lines(yD[,2],RD[,2],type='p',pch=16,col='blue')
y <- pnorm(q = x,mean = .5,sd = .05)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(y[,1],r_day[,1])
lines(yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(y[,2],r_day[,2])
lines(yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=150
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .05)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(1-y[,1],r_day[,1])
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(1-y[,2],r_day[,2])
lines(1-yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=100
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .02)
plot(x[,1],y[,1])
# check
N_days=100
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .02)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(1-y[,1],r_day[,1],ylim=c(0,1))
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(1-y[,2],r_day[,2],ylim=c(0,1))
lines(1-yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=100
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .02)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(1-y[,1],r_day[,1],ylim=c(0,5))
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(1-y[,2],r_day[,2],ylim=c(0,5))
lines(1-yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=100
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .05)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(1-y[,1],r_day[,1],ylim=c(0,5))
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(1-y[,2],r_day[,2],ylim=c(0,5))
lines(1-yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=100
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .1)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(1-y[,1],r_day[,1],ylim=c(0,5))
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(1-y[,2],r_day[,2],ylim=c(0,5))
lines(1-yD[,2],RD[,2],type='p',pch=16,col='blue')
# check
N_days=100
N_geo=2
x <- matrix(c(seq(1,0,length.out = N_days),seq(0,1,length.out = N_days)),N_days,2,byrow = FALSE)
y <- pnorm(q = x,mean = .5,sd = .08)
plot(x[,1],y[,1])
plot(x[,1],y[,2])
r_day <- Rt_fun(theta = c(5,5,2,2),x = y)
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
RD <- H %*% r_day
yD <- H %*% y
plot(1-y[,1],r_day[,1],ylim=c(0,5))
lines(1-yD[,1],RD[,1],type='p',pch=16,col='blue')
plot(1-y[,2],r_day[,2],ylim=c(0,5))
lines(1-yD[,2],RD[,2],type='p',pch=16,col='blue')
plot(x[,1],y[,2])
#st
sd
#st
std
prior_theta <- matrix(c(rep(c(0,10),N_geo),
rep(c(0,1e3),N_geo),rep(c(0,1e3),N_geo)),
length(theta0),3, byrow=TRUE)
theta0 <- c(rep(R0,N_geo),
rep(b,N_geo),rep(std,N_geo))
#st
std <- 0.5
theta0 <- c(rep(R0,N_geo),
rep(b,N_geo),rep(std,N_geo))
prior_theta <- matrix(c(rep(c(0,10),N_geo),
rep(c(0,1e3),N_geo),rep(c(0,1e3),N_geo)),
length(theta0),3, byrow=TRUE)
theta=theta0
#mobility
R_daily <- Rt_fun(theta = theta, x = M )
library(knitr)
library(Hmisc)
library(EpiEstim)
library(zoo)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
sapply(paste0('Rscript/pre_MCMC/',(list.files('Rscript/pre_MCMC/'))),FUN = source)
sapply(paste0('Rscript/plots/',(list.files('Rscript/plots/'))),FUN = source)
d <- readRDS(file='Rdata/input/data_2020-04-12.rds')
#
country <- as.character(d$Country)
# mean sd of ditrivution infection to death
mu_id = 18.8
si_std = .45*mu_id
d_m <- read.csv(file='Rdata/mobility/applemobilitytrends-2020-04-13.csv',stringsAsFactors = FALSE)
# d_m needs 3 colums for "geo_type"            "region"              "transportation_type"
# +one column per dates names as 'X.2020.01.20'
#miss-spelled
country[-which(as.character(country) %in% as.character(d_m$region))]
# missing for apple: Algeria, China, Dominican_Republic, Ecuador, Iran, Peru, South_Korea,
#corrections to match name in ECDC data
d_m$region[which(d_m$region %in% 'Czech Republic')] <- 'Czechia'
d_m$region[which(d_m$region %in% 'UK')] <- 'United_Kingdom'
d_m$region[which(d_m$region %in% 'United States')] <- 'United_States_of_America'
# check
if (length(country[-which(country %in% d_m$region)])>0){
print('warning')
country[-which(country %in% d_m$region)]
}
# include country with data in both dataset
f1 <- which(country %in% d_m$region)
f2 <- which(d_m$region %in% country)
d_m <- d_m[f2,]
d$I_active_transmission <- d$I_active_transmission[,c(1,f1+1)]
d$D_active_transmission <- d$D_active_transmission[,c(1,f1+1)]
d$Country <- d$Country[f1]
# include dates with data in both
dates <- as.Date(substr(names(d_m[,-c(1:3)]),start = 2, stop = 11),format='%Y.%m.%d')
f1 <- which(d$I_active_transmission$dates %in% dates)
f2 <- which(dates %in% d$I_active_transmission$dates)
d_m <- d_m[,c(1,2,3,3+f2)]
d$I_active_transmission <- d$I_active_transmission[f1,]
d$D_active_transmission <- d$D_active_transmission[f1,]
# correct epi
D <- d$D_active_transmission
mD <- as.matrix(D[,-1])
I <- d$I_active_transmission
cumD <- data.frame(D$dates,apply(D[,-1],2,cumsum))
cumI <- data.frame(I$dates,apply(I[,-1],2,cumsum))
N_geo <- ncol(D)-1
N_days <- nrow(D)
country <- as.character(d$Country)
mobility <- process_mobility(d_m = d_m)
layout(matrix(1:4,2,2))
for (i  in 1:N_geo){
plot(mobility$mob_raw$dates,mobility$mob_raw[,i+1],main = country[i],#ylim = c(0,1),
xlab = '',ylab = 'prop. mobility')
lines(mobility$mob_combined_smooth$dates,mobility$mob_combined_smooth[,i+1],col='blue')
# lines(mob3[,i+1],col='red')
abline(h=1,lwd=2,col='red',lty=2)
}
## # serial interval estimate used: mean = 3.96, sd =  4.75
## # Teunis et al.
SI <- gamma_dist_EpiEstim(si_mu =  d$si_mean[2],
si_std  = d$si_std[2],
SItrunc = 30)
plot(seq(0, SI$SItrunc), SI$dist, type = "h",
lwd = 10, lend = 1, xlab = "time (days)", ylab = "frequency")
title(main = "Discrete distribution of the serial interval of COVID-19")
delta_id <- gamma_dist_EpiEstim(si_mu = mu_id ,
si_std  = .45*mu_id,
SItrunc = 50)
plot(seq(0, delta_id$SItrunc), delta_id$dist, type = "h",
lwd = 10, lend = 1, xlab = "time (days)", ylab = "frequency")
title(main = "Discrete distribution of the delay infection to death")
sum(delta_id$dist[1:7])
# delay death infection matrix
H <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-delta_id$SItrunc))
H[i,f:i] <- rev(delta_id$dist)[((delta_id$SItrunc+1)-(i-f)):(delta_id$SItrunc+1)]
if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
# delay SI death to death matrix
W <- matrix(0,nrow = N_days, ncol = N_days)
for (i in 1:N_days){
f <- max(c(1,i-SI$SItrunc))
W[i,f:i] <- rev(SI$dist)[((SI$SItrunc+1)-(i-f)):(SI$SItrunc+1)]
# if (i>1) H[i,f:i] <-  H[i,f:i]/sum( H[i,f:i])
}
# overall infectivity matrix
Ot <- W%*%mD
# correct infectivity when >0 case observed but no infectivity
for(i in 1:N_geo){
Ot[ which( (D[,i+1]>0) & (Ot[,i] ==0 ) ),i] <-NA
}
# matrix of mobility and delayed version
M <- as.matrix(mobility$mob_combined_smooth[,-1])
M_D <- H %*% M
t.window <- 7
R_epiest <- list()
for (i in 1:N_geo){
obs <- D[,c(1,i+1)]
epi_res <- EpiEstim::estimate_R(obs[,2],method = 'non_parametric_si',
config = make_config(list(
mean_prior = 1,
si_distr = SI$dist,
t_start = seq(2,length(obs$date)-t.window+1,1),
t_end = seq(t.window+1,length(obs$date),1))))
epi_res$R$t_mid <-  obs$date[epi_res$R$t_end] - round(t.window/2) +1
R_epiest[[i]] <- epi_res
}
# format outputs
temp <- D
temp[,-1] <- NA
results_baseline <- list(median_R = temp,
low_R = temp,
up_R = temp,
CV = temp,
CV_below.2 = temp,
M_D = temp)
for (i in 1:N_geo){
f <- which(results_baseline$median_R$dates %in% R_epiest[[i]]$R$t_mid)
results_baseline$median_R[f,i+1] <- R_epiest[[i]]$R$`Median(R)`
results_baseline$low_R[f,i+1] <- R_epiest[[i]]$R$`Quantile.0.025(R)`
results_baseline$up_R[f,i+1] <- R_epiest[[i]]$R$`Quantile.0.975(R)`
results_baseline$CV[f,i+1] <- R_epiest[[i]]$R$`Std(R)`/R_epiest[[i]]$R$`Mean(R)`
results_baseline$CV_below.2[,i+1] <- results_baseline$CV[,i+1] < .2
results_baseline$M_D[,i+1] <- M_D[,i]
}
# epi
R0 <- 5
# for risk
b <- 0.5
#st
std <- 0.5
theta0 <- c(rep(R0,N_geo),
rep(b,N_geo),rep(std,N_geo))
prior_theta <- matrix(c(rep(c(0,10),N_geo),
rep(c(0,1e3),N_geo),rep(c(0,1e3),N_geo)),
length(theta0),3, byrow=TRUE)
# parameter names
f0 <- function(x) paste0('R0_',x)
f1 <- function(x) paste0('beta_',x)
f2 <- function(x) paste0('sig_',x)
n_t<- c(sapply(country,f0), sapply(country,f1), sapply(country,f2))
# sd dev for proposal
sigma <- rep(1e-1,length(theta0))
# useful functions
sapply(paste0('Rscript/MCMC/',(list.files('Rscript/MCMC/'))),FUN = source)
#mobility
R_daily <- Rt_fun(theta = theta, x = M )
Rt <- H %*% R_daily
